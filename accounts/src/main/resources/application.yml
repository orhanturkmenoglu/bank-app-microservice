server:
  port: 8080
spring:
  application:
    name: "ACCOUNTS"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3306/bank-app-microservices
    username: root
    password: 12345
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  sql:
    init:
      mode: always

  config:
    import: "optional:configserver:http://localhost:8071/"

  #
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true  # Feign tüm yöntemleri bir devre kesici ile saracaktır.



management:
  endpoints:
    web:
      exposure:
        include: "*"  # tüm endpointleri açık hale getirir
  # info endpointlerini ekrana yazdırır bu eureka server içeirisnde kayıt olan accounts hakkında bilgi almamzı sağlar
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: "http://localhost:8761/eureka/"  #default bağalntı adresi eureka servera bağlanacak.


# eureka server içerisinde microservise ait kayıt bilgilerini isteğe bağlıdır bu.
info:
  app:
    name: "Accounts Microservice"
    description: "Accounts Microservice for  Bank application"
    version: "1.0.0"

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        automaticTransitionFromOpenToHalfOpenEnabled: true

  #retry ayarları
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        ignoreExceptions:
          - java.lang.NullPointerException
        retry-exceptions:
          - java.util.concurrent.TimeoutException


  ratelimiter:
    configs:
      default:
        timeout-duration: 1000
        limit-refresh-period: 5000
        limit-for-period: 1



resilience4j.bulkhead:
  instances:
    default:
      maxConcurrentCalls: 10 # Maksimum eş zamanlı çağrı sayısı
      maxWaitDuration: 500ms # Eğer kaynaklar doluysa, maksimum bekleme süresi
      event-consumer-buffer-size: 100 # Kuyruktaki maksimum çağrı sayısı

logging:
  level:
    web: debug
